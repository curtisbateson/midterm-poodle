<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">

  <link rel="stylesheet" type="text/css" href="/vendor/demo/css/semantic.ui.min.css">
  <link rel="stylesheet" type="text/css" href="/vendor/demo/css/prism.css" />
  <link rel="stylesheet" type="text/css" href="/vendor/demo/css/calendar-style.css" />
  <link rel="stylesheet" type="text/css" href="/vendor/demo/css/style.css" />
  <link rel="stylesheet" type="text/css" href="/vendor/dist/css/pignose.calendar.css" />
  
  </style>
  <script type="text/javascript" src="/vendor/demo/js/jquery.latest.min.js"></script>
  <script type="text/javascript" src="/vendor/demo/js/moment.latest.min.js"></script>
  <script type="text/javascript" src="/vendor/demo/js/semantic.ui.min.js"></script>
  <script type="text/javascript" src="/vendor/demo/js/prism.min.js"></script>
  <script type="text/javascript" src="/vendor/dist/js/pignose.calendar.js"></script>
  <script type="text/javascript">

// CALENDAR FUNCTIONS 
    $(function () {
        $('#wrapper .version strong').text('v' + $.fn.pignoseCalendar.ComponentVersion);
        function onSelectHandler(date, context) {
    /**
     * @date is an array which be included dates(clicked date at first index)
     * @context is an object which stored calendar interal data.
     * @context.calendar is a root element reference.
     * @context.calendar is a calendar element reference.
     * @context.storage.activeDates is all toggled data, If you use toggle type calendar.
     * @context.storage.events is all events associated to this date
     */

            var $element = context.element;
            var $calendar = context.calendar;
            var $box = $element.siblings('.box').show();
            var text = 'You selected date ';

            if (date[0] !== null) {
                text += date[0].format('YYYY-MM-DD');
            }

            if (date[0] !== null && date[1] !== null) {
                text += ' ~ ';
            }
            else if (date[0] === null && date[1] == null) {
                text += 'nothing';
            }

            if (date[1] !== null) {
                text += date[1].format('YYYY-MM-DD');
            }

            $box.text(text);
        }

// CHOSE DATES
        function onApplyHandler(date, context) {
    /**
     * @date is an array which be included dates(clicked date at first index)
     * @context is an object which stored calendar interal data.
     * @context.calendar is a root element reference.
     * @context.calendar is a calendar element reference.
     * @context.storage.activeDates is all toggled data, If you use toggle type calendar.
     * @context.storage.events is all events associated to this date
     */

            var $element = context.element;
            var $calendar = context.calendar;
            var $box = $element.siblings('.box').show();
            var text = 'You applied date ';

            if (date[0] !== null) {
                text += date[0].format('YYYY-MM-DD');
            }

            if (date[0] !== null && date[1] !== null) {
                text += ' ~ ';
            }
            else if (date[0] === null && date[1] == null) {
                text += 'nothing';
            }

            if (date[1] !== null) {
                text += date[1].format('YYYY-MM-DD');
            }

            $box.text(text);
        }

 
        // Toggle type Calendar
        $('.toggle-calendar').pignoseCalendar({
            toggle: true,

            select: function (date, context) {
                var message = `You selected ${(date[0] === null ? 'null' : date[0].format('YYYY-MM-DD'))}.
             <br />
             <br />
             <strong>Events for this date</strong>
             <br />
             <br />
             <div class="active-dates"></div>`;
                var $target = context.calendar.parent().next().show().html(message);

                for (var idx in context.storage.activeDates) {
                    var date = context.storage.activeDates[idx];
                    if (typeof date !== 'string') {
                        continue;
                    }
                    $target.find('.active-dates').append('<span class="ui label default">' + date + '</span>');
                }
            }
        });

    // Disabled date settings.
        // (function () {
        //     // IIFE Closure
        //     var times = 30;
        //     var disabledDates = [];
        //     for (var i = 0; i < times; /* Do not increase index */) {
        //         var year = moment().year();
        //         var month = 0;
        //         var day = parseInt(Math.random() * 364 + 1);
        //         var date = moment().year(year).month(month).date(day).format('YYYY-MM-DD');
        //         if ($.inArray(date, disabledDates) === -1) {
        //             disabledDates.push(date);
        //             i++;
        //         }
        //     }

        //     disabledDates.sort();

        //     var $dates = $('.disabled-dates-calendar').siblings('.guide').find('.guide-dates');
        //     for (var idx in disabledDates) {
        //         $dates.append('<span>' + disabledDates[idx] + '</span>');
        //     }

        //     $('.disabled-dates-calendar').pignoseCalendar({
        //         select: onSelectHandler,
        //         disabledDates: disabledDates
        //     });
        // }());


        // // Disabled Range Calendar.
        // var minDate = moment().set('dates', Math.min(moment().day(), 2 + 1)).format('YYYY-MM-DD');
        // var maxDate = moment().set('dates', Math.max(moment().day(), 24 + 1)).format('YYYY-MM-DD');
        // $('.disabled-range-calendar').pignoseCalendar({
        //     select: onSelectHandler,
        //     minDate: minDate,
        //     maxDate: maxDate
        // });

        // // Disabled Ranges Calendar.
        // $('.disabled-ranges-calendar').pignoseCalendar({
        //     select: onSelectHandler,
        //     disabledRanges: [
        //         ['2000-10-05', '2017-10-29'],
        //     ]
        // });

    });
//]]>

$('#timeformatExample1').timepicker({ 'timeFormat': 'H:i:s' });
$('#timeformatExample2').timepicker({ 'timeFormat': 'h:i A' });
</script>
  <title>Dates & Times</title>
</head>
<body>
  <div id="wrapper">
    <div class="header">
        <h4>POODLR header</h4>
    </div>

    <div id="toggle Center" class="article">
        <h3><span>Toggle Calendar</span></h3>
        <div class="toggle-calendar"></div>
        <div class="box"></div>
    <div id="toggle" class="article"></div>
    <div class="footer">
        <h4>POODLR footer</h4>
    </div>
  </div>
</body>
</html>
